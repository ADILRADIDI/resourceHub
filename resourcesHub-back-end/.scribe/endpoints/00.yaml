name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/documentation
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display Swagger API page.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <title>L5 Swagger UI</title>
              <link rel="stylesheet" type="text/css" href="http://localhost:8000/docs/asset/swagger-ui.css?v=fd5df98cfc0e58ed507042cd86a1f1df">
              <link rel="icon" type="image/png" href="http://localhost:8000/docs/asset/favicon-32x32.png?v=40d4f2c38d1cd854ad463f16373cbcb6" sizes="32x32"/>
              <link rel="icon" type="image/png" href="http://localhost:8000/docs/asset/favicon-16x16.png?v=f0ae831196d55d8f4115b6c5e8ec5384" sizes="16x16"/>
              <style>
              html
              {
                  box-sizing: border-box;
                  overflow: -moz-scrollbars-vertical;
                  overflow-y: scroll;
              }
              *,
              *:before,
              *:after
              {
                  box-sizing: inherit;
              }

              body {
                margin:0;
                background: #fafafa;
              }
              </style>
          </head>

          <body>
          <div id="swagger-ui"></div>

          <script src="http://localhost:8000/docs/asset/swagger-ui-bundle.js?v=bccc97f77bdb8edc590ae3abdf83b9a7"></script>
          <script src="http://localhost:8000/docs/asset/swagger-ui-standalone-preset.js?v=861c3618a16aefc88e19a052836718e5"></script>
          <script>
              window.onload = function() {
                  // Build a system
                  const ui = SwaggerUIBundle({
                      dom_id: '#swagger-ui',
                      url: "http://localhost:8000/docs/api-docs.json",
                      operationsSorter: null,
                      configUrl: null,
                      validatorUrl: null,
                      oauth2RedirectUrl: "http://localhost:8000/api/oauth2-callback",

                      requestInterceptor: function(request) {
                          request.headers['X-CSRF-TOKEN'] = '';
                          return request;
                      },

                      presets: [
                          SwaggerUIBundle.presets.apis,
                          SwaggerUIStandalonePreset
                      ],

                      plugins: [
                          SwaggerUIBundle.plugins.DownloadUrl
                      ],

                      layout: "StandaloneLayout",
                      docExpansion : "none",
                      deepLinking: true,
                      filter: true,
                      persistAuthorization: "false",

                  })

                  window.ui = ui

                      }
          </script>
          </body>
          </html>
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/oauth2-callback
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display Oauth2 callback pages.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          <!doctype html>
          <html lang="en-US">
          <head>
              <title>Swagger UI: OAuth2 Redirect</title>
          </head>
          <body>
          <script>
              'use strict';
              function run () {
                  var oauth2 = window.opener.swaggerUIRedirectOauth2;
                  var sentState = oauth2.state;
                  var redirectUrl = oauth2.redirectUrl;
                  var isValid, qp, arr;

                  if (/code|token|error/.test(window.location.hash)) {
                      qp = window.location.hash.substring(1).replace('?', '&');
                  } else {
                      qp = location.search.substring(1);
                  }

                  arr = qp.split("&");
                  arr.forEach(function (v,i,_arr) { _arr[i] = '"' + v.replace('=', '":"') + '"';});
                  qp = qp ? JSON.parse('{' + arr.join() + '}',
                          function (key, value) {
                              return key === "" ? value : decodeURIComponent(value);
                          }
                  ) : {};

                  isValid = qp.state === sentState;

                  if ((
                    oauth2.auth.schema.get("flow") === "accessCode" ||
                    oauth2.auth.schema.get("flow") === "authorizationCode" ||
                    oauth2.auth.schema.get("flow") === "authorization_code"
                  ) && !oauth2.auth.code) {
                      if (!isValid) {
                          oauth2.errCb({
                              authId: oauth2.auth.name,
                              source: "auth",
                              level: "warning",
                              message: "Authorization may be unsafe, passed state was changed in server. The passed state wasn't returned from auth server."
                          });
                      }

                      if (qp.code) {
                          delete oauth2.state;
                          oauth2.auth.code = qp.code;
                          oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});
                      } else {
                          let oauthErrorMsg;
                          if (qp.error) {
                              oauthErrorMsg = "["+qp.error+"]: " +
                                  (qp.error_description ? qp.error_description+ ". " : "no accessCode received from the server. ") +
                                  (qp.error_uri ? "More info: "+qp.error_uri : "");
                          }

                          oauth2.errCb({
                              authId: oauth2.auth.name,
                              source: "auth",
                              level: "error",
                              message: oauthErrorMsg || "[Authorization failed]: no accessCode received from the server."
                          });
                      }
                  } else {
                      oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});
                  }
                  window.close();
              }

              if (document.readyState !== 'loading') {
                  run();
              } else {
                  document.addEventListener('DOMContentLoaded', function () {
                      run();
                  });
              }
          </script>
          </body>
          </html>
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: nbsf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: camille39@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: c\u+;|<yj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: nbsf
      email: camille39@example.net
      password: c\u+;|<yj
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: zharris@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: lZiu$TL
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: zharris@example.com
      password: lZiu$TL
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/posts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/posts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: xuvrqthiifiamohslag
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      body:
        name: body
        description: ''
        required: true
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image:
        name: image
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      video:
        name: video
        description: 'Must be a file. Must not be greater than 50000 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      document:
        name: document
        description: 'Must be a file. Must not be greater than 10000 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pdf:
        name: pdf
        description: 'Must be a file. Must not be greater than 10000 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: published
        type: string
        enumValues:
          - draft
          - published
          - archived
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: xuvrqthiifiamohslag
      body: sint
      status: published
    fileParameters:
      image: null
      video: null
      document: null
      pdf: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: error
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: error
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/posts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: velit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: velit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: jthj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      body:
        name: body
        description: ''
        required: false
        example: expedita
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: corporis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      video:
        name: video
        description: ''
        required: false
        example: quas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      document:
        name: document
        description: ''
        required: false
        example: quisquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pdf:
        name: pdf
        description: ''
        required: false
        example: atque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: draft
        type: string
        enumValues:
          - draft
          - published
          - archived
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: jthj
      body: expedita
      image: corporis
      video: quas
      document: quisquam
      pdf: atque
      status: draft
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/posts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/posts/search
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      keyword:
        name: keyword
        description: ''
        required: true
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      keyword: sint
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/posts/by-tag
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/podcasts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/podcasts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: trpewpcmtmuzimvtha
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: 'Ratione eligendi occaecati quos necessitatibus.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      logo:
        name: logo
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      audio_url:
        name: audio_url
        description: "'audio_url' => 'nullable|file|mimes:mp3,wav|max:50000',. Must not be greater than 255 characters."
        required: false
        example: 'https://doyle.com/qui-expedita-nihil-doloribus.html'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: trpewpcmtmuzimvtha
      description: 'Ratione eligendi occaecati quos necessitatibus.'
      audio_url: 'https://doyle.com/qui-expedita-nihil-doloribus.html'
    fileParameters:
      logo: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/podcasts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the podcast.'
        required: true
        example: accusantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: accusantium
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/podcasts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the podcast.'
        required: true
        example: facilis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: facilis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: zfetiaovvklxtzyhu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Provident neque quia dolorum dolores.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: porro
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      audio_url:
        name: audio_url
        description: ''
        required: false
        example: 'http://beahan.biz/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: zfetiaovvklxtzyhu
      description: 'Provident neque quia dolorum dolores.'
      logo: porro
      audio_url: 'http://beahan.biz/'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/podcasts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the podcast.'
        required: true
        example: doloribus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: doloribus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/podcasts/search
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ldokupuz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: ldokupuz
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ebaurozpnc
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: ebaurozpnc
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vazvqwrwqgnlvynxsdpgmikk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: vazvqwrwqgnlvynxsdpgmikk
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tags/by-name/{name}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      name:
        name: name
        description: ''
        required: true
        example: ab
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      name: ab
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tag/popular
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/postTags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/postTags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      post_id:
        name: post_id
        description: ''
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tag_id:
        name: tag_id
        description: ''
        required: true
        example: temporibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      post_id: vel
      tag_id: temporibus
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/postTags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the postTag.'
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: rerum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/postTags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the postTag.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      post_id:
        name: post_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tag_id:
        name: tag_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/postTags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the postTag.'
        required: true
        example: eaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: eaque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/bookmarks
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/bookmarks
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      post_id:
        name: post_id
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      post_id: voluptatem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/bookmarks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the bookmark.'
        required: true
        example: iure
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: iure
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/bookmarks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the bookmark.'
        required: true
        example: voluptate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: voluptate
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/bookmarks/{id}/archive'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the bookmark.'
        required: true
        example: delectus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: delectus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/comments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/comments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      post_id:
        name: post_id
        description: ''
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      body:
        name: body
        description: ''
        required: true
        example: error
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      post_id: ea
      body: error
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/comments/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/comments/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: ''
        required: false
        example: nam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      body: nam
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/comments/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/comments/post/{postId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      postId:
        name: postId
        description: ''
        required: true
        example: vero
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      postId: vero
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/youtubeChannels
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/youtubeChannels
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      channel_name:
        name: channel_name
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      channel_url:
        name: channel_url
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      channel_name: rerum
      channel_url: ut
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/youtubeChannels/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the youtubeChannel.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/youtubeChannels/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the youtubeChannel.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      channel_name:
        name: channel_name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: julxpagm
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      channel_url:
        name: channel_url
        description: ''
        required: true
        example: 'http://upton.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      channel_name: julxpagm
      channel_url: 'http://upton.com/'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/youtubeChannels/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the youtubeChannel.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/getAllYt
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/youtubeChannelsAdmin/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the youtubeChannelsAdmin.'
        required: true
        example: consequuntur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: consequuntur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/youtube-channels/search
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: iggzpedmknobf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: iggzpedmknobf
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/events
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/events
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: xsxvffsec
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: 'Aut vitae tempore est mollitia unde dolorem quidem.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'Must not be greater than 255 characters.'
        required: true
        example: tuqdgvdrierx
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      location:
        name: location
        description: 'Must not be greater than 255 characters.'
        required: true
        example: rywknjamvrgkpxipskwtaspf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      start_time:
        name: start_time
        description: 'Must be a valid date.'
        required: true
        example: '2024-09-29T13:10:12'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      end_time:
        name: end_time
        description: 'Must be a valid date. Must be a date after or equal to <code>start_time</code>.'
        required: true
        example: '2105-01-06'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: planned
        type: string
        enumValues:
          - planned
          - ongoing
          - completed
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: xsxvffsec
      description: 'Aut vitae tempore est mollitia unde dolorem quidem.'
      city: tuqdgvdrierx
      location: rywknjamvrgkpxipskwtaspf
      start_time: '2024-09-29T13:10:12'
      end_time: '2105-01-06'
      status: planned
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/events/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/events/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: sojgwzwfslibysuzkumuwyriy
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: 'Numquam atque optio voluptatem aut.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'Must not be greater than 255 characters.'
        required: true
        example: cehxbeyrrcjfaxcb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      location:
        name: location
        description: 'Must not be greater than 255 characters.'
        required: true
        example: fovutljanlsjharv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      start_time:
        name: start_time
        description: 'Must be a valid date.'
        required: true
        example: '2024-09-29T13:10:12'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      end_time:
        name: end_time
        description: 'Must be a valid date. Must be a date after or equal to <code>start_time</code>.'
        required: true
        example: '2115-12-17'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: completed
        type: string
        enumValues:
          - planned
          - ongoing
          - completed
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: sojgwzwfslibysuzkumuwyriy
      description: 'Numquam atque optio voluptatem aut.'
      city: cehxbeyrrcjfaxcb
      location: fovutljanlsjharv
      start_time: '2024-09-29T13:10:12'
      end_time: '2115-12-17'
      status: completed
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/events/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/events/search
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: tnxhgbfgmgnqtehqnke
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: tnxhgbfgmgnqtehqnke
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/events/{event_id}/register'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      event_id:
        name: event_id
        description: 'The ID of the event.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      event_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/stackexchange/questions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"tags":["php"],"owner":{"account_id":1039267,"reputation":19117,"user_id":1045704,"user_type":"registered","accept_rate":78,"profile_image":"https:\/\/i.sstatic.net\/B1UhK.jpg?s=256","display_name":"pheromix","link":"https:\/\/stackoverflow.com\/users\/1045704\/pheromix"},"is_answered":true,"view_count":5798,"accepted_answer_id":13620729,"answer_count":3,"score":13,"last_activity_date":1727610021,"creation_date":1354173635,"question_id":13620705,"content_license":"CC BY-SA 3.0","link":"https:\/\/stackoverflow.com\/questions\/13620705\/does-trigger-error-interrupt-script","title":"Does trigger_error interrupt script?"},{"tags":["php","laravel","laravel-artisan","artisan-migrate"],"owner":{"account_id":7001036,"reputation":561,"user_id":5367071,"user_type":"registered","accept_rate":78,"profile_image":"https:\/\/i.sstatic.net\/eclwo.jpg?s=256","display_name":"Prabin Parajuli","link":"https:\/\/stackoverflow.com\/users\/5367071\/prabin-parajuli"},"is_answered":true,"view_count":40836,"accepted_answer_id":36492961,"answer_count":11,"score":14,"last_activity_date":1727606107,"creation_date":1460096655,"question_id":36492917,"content_license":"CC BY-SA 3.0","link":"https:\/\/stackoverflow.com\/questions\/36492917\/php-artisan-migrate-not-creating-new-table","title":"PHP artisan migrate not creating new table"},{"tags":["php","arrays","multidimensional-array","string-parsing","delimited"],"owner":{"account_id":2506089,"reputation":115,"user_id":2179784,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/6d6bd98feb3bc82e5b5de12598dc8734?s=256&d=identicon&r=PG","display_name":"tomprouvost","link":"https:\/\/stackoverflow.com\/users\/2179784\/tomprouvost"},"is_answered":true,"view_count":1974,"closed_date":1727603694,"accepted_answer_id":39209769,"answer_count":1,"score":1,"last_activity_date":1727604127,"creation_date":1472480855,"last_edit_date":1727604127,"question_id":39208686,"link":"https:\/\/stackoverflow.com\/questions\/39208686\/parse-array-of-strings-composed-of-dot-separated-keys-into-a-multidimensional-ar","closed_reason":"Duplicate","title":"Parse array of strings composed of dot.separated.keys into a multidimensional array"},{"tags":["php","arrays","string","multidimensional-array","explode"],"owner":{"account_id":2411929,"reputation":3,"user_id":2106816,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/6af72e808b52062e2fe8a83dbf2a6a79?s=256&d=identicon&r=PG","display_name":"Jacob Martin","link":"https:\/\/stackoverflow.com\/users\/2106816\/jacob-martin"},"is_answered":true,"view_count":149,"accepted_answer_id":15586433,"answer_count":3,"score":0,"last_activity_date":1727603526,"creation_date":1364039302,"last_edit_date":1727603526,"question_id":15586408,"content_license":"CC BY-SA 4.0","link":"https:\/\/stackoverflow.com\/questions\/15586408\/explode-each-string-in-a-flat-array","title":"Explode each string in a flat array"},{"tags":["php"],"owner":{"account_id":18498462,"reputation":43,"user_id":13476335,"user_type":"registered","profile_image":"https:\/\/www.gravatar.com\/avatar\/bde4bd8d439c709c0911c984cbe7055e?s=256&d=identicon&r=PG&f=y&so-version=2","display_name":"64 bit","link":"https:\/\/stackoverflow.com\/users\/13476335\/64-bit"},"is_answered":true,"view_count":36,"accepted_answer_id":76059255,"answer_count":1,"score":0,"last_activity_date":1727603095,"creation_date":1681942963,"last_edit_date":1727603095,"question_id":76059230,"content_license":"CC BY-SA 4.0","link":"https:\/\/stackoverflow.com\/questions\/76059230\/api-code-error-400-when-trying-to-call-api-in-php","title":"API code error 400 - when trying to call API in php"},{"tags":["php","arrays","csv","multidimensional-array","html-table"],"owner":{"account_id":1656272,"reputation":615,"user_id":1578513,"user_type":"registered","profile_image":"https:\/\/i.sstatic.net\/EA3ui.jpg?s=256","display_name":"Bren","link":"https:\/\/stackoverflow.com\/users\/1578513\/bren"},"is_answered":true,"view_count":4741,"answer_count":3,"score":0,"last_activity_date":1727602792,"creation_date":1344237782,"last_edit_date":1727602792,"question_id":11824033,"content_license":"CC BY-SA 4.0","link":"https:\/\/stackoverflow.com\/questions\/11824033\/convert-a-text-file-containing-lines-of-comma-separated-values-into-an-hmtl-tabl","title":"Convert a text file containing lines of comma-separated values into an HMTL table"},{"tags":["php","craftcms"],"owner":{"account_id":207148,"reputation":12223,"user_id":456850,"user_type":"registered","accept_rate":48,"profile_image":"https:\/\/www.gravatar.com\/avatar\/cb15af790f2b2df4dd38f1cc989f99a2?s=256&d=identicon&r=PG","display_name":"Devin Dixon","link":"https:\/\/stackoverflow.com\/users\/456850\/devin-dixon"},"is_answered":true,"view_count":5983,"answer_count":3,"score":7,"last_activity_date":1727602752,"creation_date":1606145450,"question_id":64971376,"content_license":"CC BY-SA 4.0","link":"https:\/\/stackoverflow.com\/questions\/64971376\/craftcms-cookievalidationkey-must-be-configured-with-a-secret-key","title":"CraftCMS cookieValidationKey must be configured with a secret key"},{"tags":["php","arrays","multidimensional-array","text-parsing","delimited"],"owner":{"account_id":79428,"reputation":1475,"user_id":225228,"user_type":"registered","accept_rate":63,"profile_image":"https:\/\/www.gravatar.com\/avatar\/1ddac4a34218b9b36e3935bd74643038?s=256&d=identicon&r=PG","display_name":"Sylph","link":"https:\/\/stackoverflow.com\/users\/225228\/sylph"},"is_answered":true,"view_count":6046,"accepted_answer_id":4018059,"answer_count":3,"score":5,"last_activity_date":1727602494,"creation_date":1288033235,"last_edit_date":1727602432,"question_id":4017880,"content_license":"CC BY-SA 4.0","link":"https:\/\/stackoverflow.com\/questions\/4017880\/parse-a-string-with-three-delimiters-into-an-associative-array-of-indexed-arrays","title":"Parse a string with three delimiters into an associative array of indexed arrays"},{"tags":["php","wordpress","multisite"],"owner":{"account_id":196312,"reputation":11048,"user_id":439688,"user_type":"registered","accept_rate":98,"profile_image":"https:\/\/i.sstatic.net\/zNcDQ.jpg?s=256","display_name":"LondonGuy","link":"https:\/\/stackoverflow.com\/users\/439688\/londonguy"},"is_answered":true,"view_count":440,"accepted_answer_id":56657400,"answer_count":2,"score":-1,"last_activity_date":1727599931,"creation_date":1560893099,"last_edit_date":1560924449,"question_id":56657263,"content_license":"CC BY-SA 4.0","link":"https:\/\/stackoverflow.com\/questions\/56657263\/how-do-i-host-a-static-website-inside-a-wordpress-multisite-installation","title":"How do I host a static website inside a Wordpress multisite installation?"},{"tags":["php","laravel","laravel-blade"],"owner":{"account_id":12201221,"reputation":173,"user_id":8905440,"user_type":"registered","profile_image":"https:\/\/i.sstatic.net\/kV5HQ.jpg?s=256","display_name":"FranRP","link":"https:\/\/stackoverflow.com\/users\/8905440\/franrp"},"is_answered":true,"view_count":29227,"answer_count":5,"score":11,"last_activity_date":1727599199,"creation_date":1528270724,"last_edit_date":1528270900,"question_id":50714770,"content_license":"CC BY-SA 4.0","link":"https:\/\/stackoverflow.com\/questions\/50714770\/respect-line-breaks-in-laravel-blade","title":"Respect line breaks in Laravel blade"},{"tags":["php","laravel","laravel-blade"],"owner":{"account_id":12578238,"reputation":33,"user_id":9149900,"user_type":"registered","profile_image":"https:\/\/i.sstatic.net\/u4aHR.gif?s=256","display_name":"Colem","link":"https:\/\/stackoverflow.com\/users\/9149900\/colem"},"is_answered":true,"view_count":50,"answer_count":2,"score":2,"last_activity_date":1727597226,"creation_date":1727527112,"question_id":79034202,"content_license":"CC BY-SA 4.0","link":"https:\/\/stackoverflow.com\/questions\/79034202\/laravel-419-page-expired-works-on-local","title":"Laravel 419 Page Expired, works on local"},{"tags":["php","laravel","json-api"],"owner":{"account_id":6484140,"reputation":113,"user_id":5020261,"user_type":"registered","profile_image":"https:\/\/graph.facebook.com\/10153381552803209\/picture?type=large","display_name":"EmilBogumil","link":"https:\/\/stackoverflow.com\/users\/5020261\/emilbogumil"},"is_answered":true,"view_count":4070,"answer_count":5,"score":5,"last_activity_date":1727593177,"creation_date":1552315070,"question_id":55104290,"content_license":"CC BY-SA 4.0","link":"https:\/\/stackoverflow.com\/questions\/55104290\/checking-formrequests-validation-rules-before-authorization-in-laravel","title":"Checking FormRequest&#39;s validation rules before authorization in Laravel"},{"tags":["php","wordpress","pagination"],"owner":{"account_id":18852213,"reputation":103,"user_id":13751093,"user_type":"registered","profile_image":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Gg9DVWvvmkOx-0PJbkqOPtOajGBVX4eamSV7H-5=k-s256","display_name":"Alipvd","link":"https:\/\/stackoverflow.com\/users\/13751093\/alipvd"},"is_answered":true,"view_count":28,"accepted_answer_id":79030812,"answer_count":1,"score":1,"last_activity_date":1727590250,"creation_date":1727383410,"question_id":79029067,"content_license":"CC BY-SA 4.0","link":"https:\/\/stackoverflow.com\/questions\/79029067\/wordpress-media-image-showing-in-front-page-pagination-issue","title":"wordpress media image showing in front page - pagination issue"},{"tags":["php","diskspace"],"owner":{"account_id":716297,"reputation":575,"user_id":641975,"user_type":"unregistered","profile_image":"https:\/\/www.gravatar.com\/avatar\/7e3f8c6eca02b83645404a50112225f4?s=256&d=identicon&r=PG","display_name":"Michael","link":"https:\/\/stackoverflow.com\/users\/641975\/michael"},"is_answered":true,"view_count":137705,"accepted_answer_id":5412448,"answer_count":6,"score":30,"last_activity_date":1727588560,"creation_date":1300919233,"last_edit_date":1411807797,"question_id":5412435,"content_license":"CC BY-SA 3.0","link":"https:\/\/stackoverflow.com\/questions\/5412435\/what-does-write-failed-no-space-left-on-device-mean","title":"What does &quot;write failed: No space left on device&quot; mean?"},{"tags":["php","symfony","csv","vendor","vendors"],"owner":{"account_id":7606942,"reputation":65,"user_id":5769288,"user_type":"registered","profile_image":"https:\/\/i.sstatic.net\/CseLn.png?s=256","display_name":"SwingingTom","link":"https:\/\/stackoverflow.com\/users\/5769288\/swingingtom"},"is_answered":true,"view_count":3060,"accepted_answer_id":37813118,"answer_count":2,"score":1,"last_activity_date":1727586617,"creation_date":1464006413,"last_edit_date":1464017326,"question_id":37391018,"content_license":"CC BY-SA 3.0","link":"https:\/\/stackoverflow.com\/questions\/37391018\/php-league-csv-reader-how-to-know-which-delimiter-was-used","title":"PHP league\/csv Reader How to know which delimiter was used?"},{"tags":["php","datasource","cakephp-2.7"],"owner":{"account_id":982572,"reputation":83,"user_id":1001924,"user_type":"registered","accept_rate":75,"profile_image":"https:\/\/www.gravatar.com\/avatar\/ea3f8a216ecfaa14ce2cbc266385dc12?s=256&d=identicon&r=PG","display_name":"Fliggerty","link":"https:\/\/stackoverflow.com\/users\/1001924\/fliggerty"},"is_answered":true,"view_count":642,"accepted_answer_id":41881916,"answer_count":3,"score":2,"last_activity_date":1727586062,"creation_date":1485460523,"question_id":41881842,"content_license":"CC BY-SA 3.0","link":"https:\/\/stackoverflow.com\/questions\/41881842\/adding-to-or-overriding-a-core-class-method-in-cakephp","title":"Adding to (or overriding) a core class method in cakePHP"}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/stackexchange/questions/{id}/answers'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the question.'
        required: true
        example: debitis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: debitis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/reactions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of all reactions.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/reactions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created reaction in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      post_id:
        name: post_id
        description: ''
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      reaction_type:
        name: reaction_type
        description: 'Accepts true or false.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      post_id: in
      reaction_type: false
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/reactions/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified reaction.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the reaction.'
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/reactions/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified reaction from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the reaction.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/youtube
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      language:
        name: language
        description: 'Must not be greater than 50 characters.'
        required: true
        example: bujoaltnjittdl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      language: bujoaltnjittdl
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/programming-data
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"programming_languages":["JavaScript","Python","Java","C#","C++","Ruby","Go","PHP","Swift","Rust","Kotlin","TypeScript","Scala","Haskell","MATLAB","Julia","R","SQL","Lua","Perl","Tcl","Scheme","Common Lisp","Erlang","OCaml","F#","Delphi","PowerShell","VB.NET","Visual Basic","Assembly","Pascal","Ada","COBOL","Fortran","PL\/I","ALGOL"],"frameworks_and_libraries":["React","Angular","Vue.js","Django","Flask","Spring","Laravel","Ruby on Rails","Node.js","Express.js","TensorFlow","PyTorch","Bootstrap","Tailwind CSS"]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/profile/{userId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: vitae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      userId: vitae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profile/update/name
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ecigixehseeclfu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: ecigixehseeclfu
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profile/update/email
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profile/update/password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      current_password:
        name: current_password
        description: ''
        required: true
        example: earum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      new_password:
        name: new_password
        description: 'Must be at least 8 characters.'
        required: true
        example: zslfhasqqsvpqznzlhiyuflbsbkenxmouazjhzbjotreqpidisopqhcwqbyephkuiaczzkhwmztccq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      current_password: earum
      new_password: zslfhasqqsvpqznzlhiyuflbsbkenxmouazjhzbjotreqpidisopqhcwqbyephkuiaczzkhwmztccq
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profile/update/bio
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      bio:
        name: bio
        description: 'Must not be greater than 500 characters.'
        required: false
        example: bbqvgofudyszh
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      bio: bbqvgofudyszh
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profile/update/skills
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      skills:
        name: skills
        description: 'Must not be greater than 500 characters.'
        required: false
        example: afwpguuvailryxxsbyblu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      skills: afwpguuvailryxxsbyblu
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profile/update/github
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      github:
        name: github
        description: 'Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: agbaqpaem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      github: agbaqpaem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profile/updatepicture
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile_picture:
        name: profile_picture
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      profile_picture: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profile/update/website
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      website:
        name: website
        description: 'Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: cnunzibazxzjsid
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      website: cnunzibazxzjsid
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profile/update/location
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      location:
        name: location
        description: 'Must not be greater than 255 characters.'
        required: false
        example: hsizuqoaooebyzfsshbfqrkh
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      location: hsizuqoaooebyzfsshbfqrkh
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profile/update/position
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      position:
        name: position
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ghdkyjfpsjllbqslvrqju
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      position: ghdkyjfpsjllbqslvrqju
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profile/update/brand-color
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      brand_color:
        name: brand_color
        description: 'Must not be greater than 7 characters.'
        required: false
        example: wfp
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      brand_color: wfp
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profile/update/birthday
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      birthday:
        name: birthday
        description: 'Must be a valid date.'
        required: false
        example: '2024-09-29T13:10:14'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      birthday: '2024-09-29T13:10:14'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/tags/{id}/follow'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tags/{id}/unfollow'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tags/{id}/is-following'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/follow/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the follow.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/unfollow/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the unfollow.'
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: non
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/followers/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the follower.'
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: eos
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/following/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the following.'
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: ea
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/isf/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the isf.'
        required: true
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: necessitatibus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/permissions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve all permissions.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"name":"view posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":2,"name":"edit posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":3,"name":"delete posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":4,"name":"create posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":5,"name":"view comments","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":6,"name":"create comments","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":7,"name":"edit comments","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":8,"name":"delete comments","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":9,"name":"view podcasts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":10,"name":"create podcasts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":11,"name":"edit podcasts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":12,"name":"delete podcasts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":13,"name":"view yt channels","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":14,"name":"create yt channels","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":15,"name":"edit yt channels","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":16,"name":"delete yt channels","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":17,"name":"view events","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":18,"name":"create events","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":19,"name":"edit events","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":20,"name":"delete events","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":21,"name":"register events","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":22,"name":"search in yt","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":23,"name":"watch yt videos","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":24,"name":"view bookmarks","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":25,"name":"create bookmarks","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":26,"name":"delete bookmarks","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":27,"name":"manage users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":28,"name":"manage ads","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":29,"name":"view analytics","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":30,"name":"view settings","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":31,"name":"manage tags","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":32,"name":"manage reactions","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":33,"name":"add users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":34,"name":"view users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":35,"name":"edit users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":36,"name":"delete users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"},{"id":37,"name":"suggest podcasts","guard_name":"web","created_at":"2024-09-09T21:57:50.000000Z","updated_at":"2024-09-09T21:57:50.000000Z"},{"id":38,"name":"manage podcasts","guard_name":"web","created_at":"2024-09-09T21:57:50.000000Z","updated_at":"2024-09-09T21:57:50.000000Z"},{"id":39,"name":"manage suggested tags","guard_name":"web","created_at":"2024-09-09T21:57:50.000000Z","updated_at":"2024-09-09T21:57:50.000000Z"},{"id":40,"name":"view Ad","guard_name":"web","created_at":"2024-09-21T12:12:35.000000Z","updated_at":"2024-09-21T12:12:35.000000Z"},{"id":42,"name":"Peter Lester","guard_name":"web","created_at":"2024-09-27T03:22:04.000000Z","updated_at":"2024-09-27T03:22:04.000000Z"}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/permissions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new permission.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: et
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/permissions/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a specific permission.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the permission.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"name":"view posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/permissions/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a specific permission.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the permission.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/permissions/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a specific permission.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the permission.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/roles
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve all roles with their associated permissions.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"name":"user","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","permissions":[{"id":1,"name":"view posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":1}},{"id":2,"name":"edit posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":2}},{"id":3,"name":"delete posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":3}},{"id":4,"name":"create posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":4}},{"id":5,"name":"view comments","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":5}},{"id":6,"name":"create comments","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":6}},{"id":8,"name":"delete comments","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":8}},{"id":9,"name":"view podcasts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":9}},{"id":10,"name":"create podcasts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":10}},{"id":13,"name":"view yt channels","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":13}},{"id":14,"name":"create yt channels","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":14}},{"id":17,"name":"view events","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":17}},{"id":21,"name":"register events","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":21}},{"id":24,"name":"view bookmarks","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":24}},{"id":25,"name":"create bookmarks","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":25}},{"id":26,"name":"delete bookmarks","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":26}},{"id":28,"name":"manage ads","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":28}},{"id":31,"name":"manage tags","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":31}},{"id":33,"name":"add users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":33}},{"id":34,"name":"view users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":34}},{"id":35,"name":"edit users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":35}},{"id":36,"name":"delete users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":36}},{"id":37,"name":"suggest podcasts","guard_name":"web","created_at":"2024-09-09T21:57:50.000000Z","updated_at":"2024-09-09T21:57:50.000000Z","pivot":{"role_id":1,"permission_id":37}},{"id":39,"name":"manage suggested tags","guard_name":"web","created_at":"2024-09-09T21:57:50.000000Z","updated_at":"2024-09-09T21:57:50.000000Z","pivot":{"role_id":1,"permission_id":39}},{"id":40,"name":"view Ad","guard_name":"web","created_at":"2024-09-21T12:12:35.000000Z","updated_at":"2024-09-21T12:12:35.000000Z","pivot":{"role_id":1,"permission_id":40}}]},{"id":2,"name":"super-admin","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","permissions":[{"id":1,"name":"view posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":1}},{"id":2,"name":"edit posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":2}},{"id":3,"name":"delete posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":3}},{"id":4,"name":"create posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":4}},{"id":5,"name":"view comments","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":5}},{"id":6,"name":"create comments","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":6}},{"id":7,"name":"edit comments","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":7}},{"id":8,"name":"delete comments","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":8}},{"id":9,"name":"view podcasts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":9}},{"id":10,"name":"create podcasts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":10}},{"id":11,"name":"edit podcasts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":11}},{"id":12,"name":"delete podcasts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":12}},{"id":13,"name":"view yt channels","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":13}},{"id":14,"name":"create yt channels","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":14}},{"id":15,"name":"edit yt channels","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":15}},{"id":16,"name":"delete yt channels","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":16}},{"id":17,"name":"view events","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":17}},{"id":18,"name":"create events","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":18}},{"id":19,"name":"edit events","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":19}},{"id":20,"name":"delete events","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":20}},{"id":21,"name":"register events","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":21}},{"id":22,"name":"search in yt","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":22}},{"id":23,"name":"watch yt videos","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":23}},{"id":24,"name":"view bookmarks","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":24}},{"id":25,"name":"create bookmarks","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":25}},{"id":26,"name":"delete bookmarks","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":26}},{"id":27,"name":"manage users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":27}},{"id":28,"name":"manage ads","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":28}},{"id":29,"name":"view analytics","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":29}},{"id":30,"name":"view settings","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":30}},{"id":31,"name":"manage tags","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":31}},{"id":32,"name":"manage reactions","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":32}},{"id":33,"name":"add users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":33}},{"id":34,"name":"view users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":34}},{"id":35,"name":"edit users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":35}},{"id":36,"name":"delete users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":2,"permission_id":36}},{"id":37,"name":"suggest podcasts","guard_name":"web","created_at":"2024-09-09T21:57:50.000000Z","updated_at":"2024-09-09T21:57:50.000000Z","pivot":{"role_id":2,"permission_id":37}},{"id":38,"name":"manage podcasts","guard_name":"web","created_at":"2024-09-09T21:57:50.000000Z","updated_at":"2024-09-09T21:57:50.000000Z","pivot":{"role_id":2,"permission_id":38}},{"id":39,"name":"manage suggested tags","guard_name":"web","created_at":"2024-09-09T21:57:50.000000Z","updated_at":"2024-09-09T21:57:50.000000Z","pivot":{"role_id":2,"permission_id":39}},{"id":40,"name":"view Ad","guard_name":"web","created_at":"2024-09-21T12:12:35.000000Z","updated_at":"2024-09-21T12:12:35.000000Z","pivot":{"role_id":2,"permission_id":40}}]},{"id":21,"name":"Helper_one","guard_name":"web","created_at":"2024-09-27T03:15:05.000000Z","updated_at":"2024-09-27T03:15:26.000000Z","permissions":[{"id":1,"name":"view posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":21,"permission_id":1}},{"id":2,"name":"edit posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":21,"permission_id":2}},{"id":3,"name":"delete posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":21,"permission_id":3}},{"id":38,"name":"manage podcasts","guard_name":"web","created_at":"2024-09-09T21:57:50.000000Z","updated_at":"2024-09-09T21:57:50.000000Z","pivot":{"role_id":21,"permission_id":38}}]}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '54'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/roles
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new role.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: dolorum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      permissions:
        name: permissions
        description: ''
        required: false
        example:
          - nostrum
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: dolorum
      permissions:
        - nostrum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/roles/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a specific role.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"name":"user","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","permissions":[{"id":1,"name":"view posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":1}},{"id":2,"name":"edit posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":2}},{"id":3,"name":"delete posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":3}},{"id":4,"name":"create posts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":4}},{"id":5,"name":"view comments","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":5}},{"id":6,"name":"create comments","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":6}},{"id":8,"name":"delete comments","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":8}},{"id":9,"name":"view podcasts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":9}},{"id":10,"name":"create podcasts","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":10}},{"id":13,"name":"view yt channels","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":13}},{"id":14,"name":"create yt channels","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":14}},{"id":17,"name":"view events","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":17}},{"id":21,"name":"register events","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":21}},{"id":24,"name":"view bookmarks","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":24}},{"id":25,"name":"create bookmarks","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":25}},{"id":26,"name":"delete bookmarks","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":26}},{"id":28,"name":"manage ads","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":28}},{"id":31,"name":"manage tags","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":31}},{"id":33,"name":"add users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":33}},{"id":34,"name":"view users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":34}},{"id":35,"name":"edit users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":35}},{"id":36,"name":"delete users","guard_name":"web","created_at":"2024-09-03T21:37:02.000000Z","updated_at":"2024-09-03T21:37:02.000000Z","pivot":{"role_id":1,"permission_id":36}},{"id":37,"name":"suggest podcasts","guard_name":"web","created_at":"2024-09-09T21:57:50.000000Z","updated_at":"2024-09-09T21:57:50.000000Z","pivot":{"role_id":1,"permission_id":37}},{"id":39,"name":"manage suggested tags","guard_name":"web","created_at":"2024-09-09T21:57:50.000000Z","updated_at":"2024-09-09T21:57:50.000000Z","pivot":{"role_id":1,"permission_id":39}},{"id":40,"name":"view Ad","guard_name":"web","created_at":"2024-09-21T12:12:35.000000Z","updated_at":"2024-09-21T12:12:35.000000Z","pivot":{"role_id":1,"permission_id":40}}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '53'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/roles/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a specific role.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      permissions:
        name: permissions
        description: ''
        required: false
        example:
          - accusantium
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      permissions:
        - accusantium
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/roles/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a specific role.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: voluptatem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: laudantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: laudantium
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: floyd.gleichner@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role:
        name: role
        description: ''
        required: false
        example: cupiditate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: consequatur
      email: floyd.gleichner@example.net
      role: cupiditate
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: veniam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: konopelski.king@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: "OqP&Q:J'7{VS"
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role:
        name: role
        description: ''
        required: true
        example: quae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: veniam
      email: konopelski.king@example.com
      password: "OqP&Q:J'7{VS"
      role: quae
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":5,"name":"AI","slug":"ai","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":6,"name":"Analytics","slug":"analytics","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":7,"name":"Animation","slug":"animation","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":8,"name":"API Building","slug":"api-building","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":9,"name":"Audio","slug":"audio","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":10,"name":"Authentication","slug":"authentication","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":11,"name":"Blog","slug":"blog","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":12,"name":"Book","slug":"book","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":13,"name":"Browser","slug":"browser","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":14,"name":"CDN","slug":"cdn","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":15,"name":"Cheatsheet","slug":"cheatsheet","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":16,"name":"Cloud Computing","slug":"cloud-computing","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":17,"name":"Code Challenge","slug":"code-challenge","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":18,"name":"Code Generator","slug":"code-generator","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":19,"name":"Code Snippet","slug":"code-snippet","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":20,"name":"Color","slug":"color","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":21,"name":"Conference","slug":"conference","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":22,"name":"Database","slug":"database","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":23,"name":"Design","slug":"design","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"},{"id":24,"name":"Documentation","slug":"documentation","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '52'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/categories/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the form for creating a new resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: ''
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '51'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ciadgihn
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 255 characters.'
        required: true
        example: hptpjedzjrdgrfzriagspbg
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: ciadgihn
      slug: hptpjedzjrdgrfzriagspbg
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '50'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/categories/{category_id}/edit'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the form for editing the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      category_id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: ''
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '49'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: xzutfieqbedqyjnetcxzgn
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      slug:
        name: slug
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: xzutfieqbedqyjnetcxzgn
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/resources
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resources.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"id":3,"title":"Toools design","description":"A growing archive of 1,500+ design resources,\r\nfrequently updated for the community.","url":"https:\/\/www.toools.design\/?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2F245e07b1-b1b5-4c4f-a619-04126f2cea9f.png&w=1200&q=75","category_id":4,"created_at":null,"updated_at":null,"category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":4,"title":"Stark","description":"The suite of integrated accessibility tools for your\r\nproduct design and development team \u2022 Making\r\nthe world''s products accessible.","url":"https:\/\/www.getstark.co\/?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2F22e15b48-d1ac-432a-aaa7-638f4ab0abec.png&w=1200&q=75","category_id":4,"created_at":null,"updated_at":null,"category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":5,"title":"Techstarta","description":"Empower your tech career with Techstarta! Gain\r\nhands-on project experience and mentorship to\r\nconnect with industry experts.","url":"https:\/\/techstarta.com\/?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2F2cbaaf14-585f-4d49-8a61-f7c06e10c718.png&w=1200&q=75","category_id":5,"created_at":null,"updated_at":null,"category":{"id":5,"name":"AI","slug":"ai","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":6,"title":"Soundstripe","description":"Every creator''s one-stop shop for the best\r\nroyalty free music, SFX, and stock video.\r\nPurchase a license for one file, or subscribe for\r\nunlimited access.","url":"https:\/\/www.soundstripe.com\/?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2Fdea225af-8092-4811-b30b-f544b2bbae70.png&w=1200&q=75","category_id":9,"created_at":null,"updated_at":null,"category":{"id":9,"name":"Audio","slug":"audio","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":7,"title":"Gore Image Stack\r\n","description":"An image CDN for convenient transformation,\r\ncompression, and delivery of website images on\r\nthe fly.","url":"https:\/\/gcore.com\/image-stack?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2F486fea6a-9d05-4242-80fb-759e6242fde8.png&w=1200&q=75","category_id":14,"created_at":null,"updated_at":null,"category":{"id":14,"name":"CDN","slug":"cdn","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":8,"title":"A11y Coffee","description":"The introduction on web accessibility for every single web developer.","url":"https:\/\/a11y.coffee\/?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2Fa6580eed-173f-44f1-9e21-a84c27ed97e9.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":9,"title":"Testing Accessibility","description":"A self-paced workshop designed to teach you the principles and effective patterns of accessibility, from design to deployment.","url":"https:\/\/testingaccessibility.com\/?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2Fcf7f7779-ead1-46fd-bcad-be67bbd795a9.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":10,"title":"WAVE","description":"WAVE is a suite of evaluation tools that helps authors make their web content more accessible to individuals with disabilities.","url":"https:\/\/wave.webaim.org\/?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2Ffb230183-e7f7-48df-83ca-a75e55dc089b.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":11,"title":"The A11Y Project","description":"The A11Y Project is a community-driven effort to make digital accessibility easier.","url":"https:\/\/www.a11yproject.com\/?ref=dev_resources\/","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2Fff1a4d16-6847-4013-8726-935710a60577.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":12,"title":"Tenon","description":"Accessibility as a Service.","url":"https:\/\/www.levelaccess.com\/tenon-retiring-faqs\/","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2F065d36a8-6d66-4bdc-9626-42e4c8630e64.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":13,"title":"Inclusive Components","description":"A blog trying to be a pattern library. All about designing inclusive web interfaces, piece by piece.","url":"https:\/\/inclusive-components.design\/?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2F3ce63b67-7f67-4bcb-bc7e-13205a79c9f4.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":14,"title":"HTML5 Accessibility","description":"Get the current accessibility support status of HTML5 features across major browsers.","url":"https:\/\/www.html5accessibility.com\/?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2Fa82150a9-3503-4764-afb9-722f088f4488.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":15,"title":"Contrast Ratio","description":"Easily calculate color contrast ratios.","url":"https:\/\/www.siegemedia.com\/contrast-ratio?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2F23a4ce7a-4a24-4e41-87e2-0f8cc095a3f9.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":16,"title":"Color.review","description":"A modern tool for exploring and finding accessible colors. Make sure that everyone can see your creations.","url":"https:\/\/color.review\/?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2Fdded2533-2e96-4576-a821-ba68269e9ed6.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":17,"title":"Color Contrast Checker","description":"Make sure your website has accessible colors.","url":"https:\/\/zarhasan.github.io\/color-contrast-checker\/?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2Ff0b9ff46-a75d-488a-b8bd-94638c43f9a2.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":18,"title":"Checka11y.css","description":"A CSS stylesheet to quickly highlight a11y concerns.","url":"https:\/\/github.com\/jackdomleo7\/Checka11y.css?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2F4c4d0513-e6bd-4d2a-9720-d0c795a368aa.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":19,"title":"Awesome a11y","description":"A curate list about A11Y. Contribute to brunopulis\/awesome-a11y development by creating an account on GitHub.","url":"https:\/\/github.com\/brunopulis\/awesome-a11y?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2Fd2b4d271-f056-4dce-a1cb-fbfea2ec061a.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":20,"title":"ally.js","description":"JavaScript library to help modern web applications with accessibility concerns by making accessibility simpler.","url":"https:\/\/allyjs.io\/?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2F736f96f7-fd8f-4143-adc5-a7e30a06406a.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":21,"title":"Accessible Color Generator","description":"A tool for creating color variations on a base color to meet WCAG AA or AAA color contrast ratio guidelines.","url":"https:\/\/www.learnui.design\/tools\/accessible-color-generator.html?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2Fa3c6890f-110d-4c89-ae68-4152f62b7518.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":22,"title":"A11yWeekly","description":"A weekly dose of web accessibility to help you bring it into your everyday work.","url":"https:\/\/a11yweekly.com\/?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2Fc0c7d45f-6688-4db6-b780-0bed453cb230.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":23,"title":"A11ygator","description":"An application, a Twitter bot, and a browser extension that bites websites to taste their accessibility.","url":"https:\/\/a11ygator.chialab.io\/?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2F11893cda-060a-44ad-9f04-f46cc71af91f.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}},{"id":24,"title":"18F Accessibility Guide","description":"A simple checklist for determining if your site is accessible.","url":"https:\/\/guides.18f.gov\/accessibility\/checklist\/","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2F242c68da-f5db-4fb7-97a1-f91717161987.png&w=1200&q=75","category_id":4,"created_at":"2024-09-25T04:32:56.000000Z","updated_at":"2024-09-25T04:32:56.000000Z","category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '48'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/resources
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: lljvichqiugriyihln
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Est suscipit illum quisquam reprehenderit.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      url:
        name: url
        description: 'Must be a valid URL.'
        required: true
        example: 'https://www.runolfsdottir.com/enim-autem-saepe-alias-commodi-totam-non-quia-voluptates'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: distinctio
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: lljvichqiugriyihln
      description: 'Est suscipit illum quisquam reprehenderit.'
      url: 'https://www.runolfsdottir.com/enim-autem-saepe-alias-commodi-totam-non-quia-voluptates'
      category_id: distinctio
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/resources/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the resource.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":3,"title":"Toools design","description":"A growing archive of 1,500+ design resources,\r\nfrequently updated for the community.","url":"https:\/\/www.toools.design\/?ref=dev_resources","image_url":"https:\/\/devresourc.es\/_next\/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdev-resources%2Fimage%2Fupload%2Fresources%2Fscreenshots%2F245e07b1-b1b5-4c4f-a619-04126f2cea9f.png&w=1200&q=75","category_id":4,"created_at":null,"updated_at":null,"category":{"id":4,"name":"Accessibility","slug":"accessibility","created_at":"2024-09-21T01:43:00.000000Z","updated_at":"2024-09-21T01:43:00.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '47'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/resources/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the resource.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: jedakpfox
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Qui nostrum dolor impedit earum fuga sed ad.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      url:
        name: url
        description: 'Must be a valid URL.'
        required: true
        example: 'http://www.schultz.info/laboriosam-quis-vel-occaecati-cum.html'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: eveniet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: jedakpfox
      description: 'Qui nostrum dolor impedit earum fuga sed ad.'
      url: 'http://www.schultz.info/laboriosam-quis-vel-occaecati-cum.html'
      category_id: eveniet
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/resources/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the resource.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/suggested-tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/suggested-tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vnkibzcmnfbnsetugoy
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: draft
        type: string
        enumValues:
          - draft
          - published
          - archived
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: vnkibzcmnfbnsetugoy
      status: draft
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/suggested-tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the suggested tag.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/suggested-tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the suggested tag.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: gap
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: draft
        type: string
        enumValues:
          - draft
          - published
          - archived
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: gap
      status: draft
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/suggested-tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the suggested tag.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/ads
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/ads/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/ads
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: h
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: 'Aperiam molestiae eum molestiae.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      url:
        name: url
        description: 'Must be a valid URL.'
        required: true
        example: 'http://www.dickens.biz/pariatur-consequatur-dolorem-in-fugit-dolores-architecto-quaerat'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image_url:
        name: image_url
        description: 'Must be a valid URL.'
        required: true
        example: 'http://ferry.biz/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: h
      description: 'Aperiam molestiae eum molestiae.'
      url: 'http://www.dickens.biz/pariatur-consequatur-dolorem-in-fugit-dolores-architecto-quaerat'
      image_url: 'http://ferry.biz/'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/ads/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ad.'
        required: true
        example: quam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: quam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/ads/{ad}/edit'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ad:
        name: ad
        description: 'The ad.'
        required: true
        example: ullam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      ad: ullam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/ads/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ad.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: kajsneuntixumlbrwwyoowg
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: 'Iste porro quasi qui libero error non.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      url:
        name: url
        description: 'Must be a valid URL.'
        required: true
        example: 'http://www.schaden.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image_url:
        name: image_url
        description: 'Must be a valid URL.'
        required: true
        example: 'http://stark.com/aut-repellendus-expedita-laudantium-repellat-placeat'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: kajsneuntixumlbrwwyoowg
      description: 'Iste porro quasi qui libero error non.'
      url: 'http://www.schaden.com/'
      image_url: 'http://stark.com/aut-repellendus-expedita-laudantium-repellat-placeat'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/ads/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ad.'
        required: true
        example: illum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: illum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/suggested-yt-channels
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/suggested-yt-channels
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      channel_name:
        name: channel_name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: dfzqjdjhnugahro
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      channel_url:
        name: channel_url
        description: 'Must be a valid URL. Must not be greater than 255 characters.'
        required: true
        example: 'http://pagac.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: archived
        type: string
        enumValues:
          - draft
          - published
          - archived
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      channel_name: dfzqjdjhnugahro
      channel_url: 'http://pagac.com/'
      status: archived
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/suggested-yt-channels/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the suggested yt channel.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/suggested-yt-channels/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the suggested yt channel.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      channel_name:
        name: channel_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: gunkmfsxwafl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      channel_url:
        name: channel_url
        description: 'Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: 'http://wisoky.biz/esse-odit-corporis-aliquam.html'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: archived
        type: string
        enumValues:
          - draft
          - published
          - archived
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      channel_name: gunkmfsxwafl
      channel_url: 'http://wisoky.biz/esse-odit-corporis-aliquam.html'
      status: archived
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/suggested-yt-channels/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the suggested yt channel.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/accept-suggested-channel/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Accept a suggested channel and create a new channel.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the accept suggested channel.'
        required: true
        example: maxime
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: maxime
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/suggested-podcasts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/suggested-podcasts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: aoww
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: aoww
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/suggested-podcasts/{id}/accept'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Accept a suggested podcast and create the actual podcast.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the suggested podcast.'
        required: true
        example: asperiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: asperiores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/suggested-podcasts/{id}/reject'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reject a suggested podcast.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the suggested podcast.'
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: rerum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/notifications
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/notifications/{id}/mark-as-read'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the notification.'
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: dolorem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/notifications/mark-all-as-read
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/notifications
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/like
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/like
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/ask
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      question:
        name: question
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ymaitfdhjmspjkweuwi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      question: ymaitfdhjmspjkweuwi
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/github
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '46'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/github/callback
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '45'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/google
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '44'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/google/callback
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '43'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/gitlab
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '42'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/gitlab/callback
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '41'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/password/email
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: feest.meghan@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: feest.meghan@example.com
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/password/reset
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: ''
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: crooks.demarco@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: sequi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      token: id
      email: crooks.demarco@example.com
      password: sequi
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
